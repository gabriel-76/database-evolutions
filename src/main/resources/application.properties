# Whether evolutions are enabled
play.evolutions.enabled = true

# Database schema in which the generated evolution and lock tables will be saved to
play.evolutions.schema =public

# Whether evolution updates should be performed with autocommit or in a manually managed transaction
play.evolutions.autocommit = true

# Whether locks should be used when apply evolutions.  If this is true, a locks table will be created, and will
# be used to synchronise between multiple Play instances trying to apply evolutions.  Set this to true in a multi
# node environment.
play.evolutions.useLocks = false

# Whether evolutions should be automatically applied.  In prod mode, this will only apply ups, in dev mode, it will
# cause both ups and downs to be automatically applied.
play.evolutions.autoApply = false

# Whether downs should be automatically applied.  This must be used in combination with autoApply, and only applies
# to prod mode.
play.evolutions.autoApplyDowns = false

# Whether evolutions should be skipped, if the scripts are all down.
play.evolutions.skipApplyDownsOnly = false

# Specifies the play.evolutions execution mode.
# The allowed modes are dev, test, production.
play.evolutions.mode = dev

spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

spring.h2.console.enabled=true